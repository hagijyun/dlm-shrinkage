// -*- mode: stan -*-
#include <jeffreys.stanh>
#include <kalman_seq.stanh>
data {
  // dimensions
  int n; // number of observations
  // system matrices
  matrix[1, 2] Z;
  matrix[2, 2] R;
  vector[1] c;
  vector[2] d;
  vector[2] a1;
  real<lower=0.0> P1_1;
  real rho_ub;
  real rho_lb;
  real rho_mean;
  real rho_sd;
  // data
  matrix[1, n] y;
  real<lower=0.0> meas_err[n]; // observation variances (given)
}
parameters {
  real<lower=0.0> sigma2;
  vector<lower=0.0>[2] tau;
  real<lower=rho_lb, upper=rho_ub> rho;
}
transformed parameters {
  vector<lower=0.0>[1] H[n];
  matrix<lower=0.0>[2, 2] Q;
  matrix[2, 2] P1;
  vector<lower=0.0>[2] tau2;
  matrix[2, 2] T;
  for (i in 1:2) {
    tau2[i] <- pow(tau[i], 2);
  }
  {
    vector[2] P1_diag;
    P1_diag[1] <- P1_1;
    P1_diag[2] <- tau2[2] / (1 - pow(rho, 2));
    P1 <- diag_matrix(P1_diag);
  }
  T[1, 1] <- 1.0;
  T[1, 2] <- 0.0;
  T[2, 1] <- 0.0;
  T[2, 2] <- rho;
  for (i in 1:n) {
    H[i, 1] <- sigma2 + meas_err[i];
  }
  Q <- diag_matrix(tau2);
}
model {
  matrix[2, 2] RQR;
  RQR <- R * Q * R';
  KALMAN_SEQ_H(y, T, Z, H, RQR, a1, P1, c, d);
  JEFFREYS(sigma2);
  tau ~ cauchy(0, sqrt(sigma2));
  rho ~ normal(rho_mean, rho_sd) T[rho_lb, rho_ub];
}
