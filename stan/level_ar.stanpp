// -*- mode: stan -*-
// long series AR model
#include <jeffreys.stanh>
#include <kalman_seq.stanh>
data {
  // dimensions
  int n; // number of observations
  int ar; // ar order
  // system matrices
  matrix[1, ar + 1] Z;
  matrix[ar + 1, 2] R;
  matrix[1 + ar, 1 + ar] T0;
  vector[1] c;
  vector[ar + 1] d;
  real<lower=0.0> P1_1;
  real a1_1;

  // data
  matrix[1, n] y;
}
transformed data {
  vector[ar + 1] a1;
  a1[1] <- a1_1;
  for (i in 1:ar) {
    a1[i + 1] <- 0.0;
  }
}
parameters {
  real<lower=0.0> sigma2;
  vector<lower=0.0>[2] tau;
  vector[ar] rho;
  real<lower=0.0> rho_pr_scale;
}
transformed parameters {
  vector<lower=0.0>[1] H;
  matrix[rows(T0), cols(T0)] T;
  matrix<lower=0.0>[2, 2] Q;
  vector<lower=0.0>[ar + 1] P1_diag;
  matrix[ar + 1, ar + 1] P1;
  H[1] <- sigma2;
  T <- T0;
  for (i in 1:ar) {
    T[2, i + 1] <- rho[i];
  }
  {
    vector[2] tau2;
    for (i in 1:2) {
      tau2[i] <- pow(tau[i], 2);
    }
  }
  Q <- diag_matrix(tau);
  P1_diag[1] <- P1_1;
  for (i in 1:ar) {
    P1_diag[i + 1] <- 1e7;
  }
  P1 <- diag_matrix(P1_diag);
}
model {
  matrix[ar + 1, ar + 1] RQR;
  RQR <- R * Q * R';
  KALMAN_SEQ(y, T, Z, H, RQR, a1, P1, c, d);
  JEFFREYS(sigma2);
  tau ~ cauchy(0, sqrt(sigma2));
  for (i in 1:ar) {
    rho ~ normal(0, rho_pr_scale / i);
  }
}
