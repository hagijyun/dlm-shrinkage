#define KALMAN_SEQ_{{#tv_T}}T{{/tv_T}}{{#tv_Z}}Z{{/tv_Z}}{{#tv_H}}H{{/tv_H}}{{#tv_RQR}}Q{{/tv_RQR}}{{#tv_c}}c{{/tv_c}}{{#tv_d}}d{{/tv_d}}{{#use_missing}}M{{/use_missing}}(y, T, Z, H, RQR, a1, P1, c, d{{#use_missing}}, missing{{/use_missing}}, prefix) \
{ \
  real prefix#v; \
  vector[rows(T)] prefix#K; \
  real prefix#Finv; \
  vector[rows(T)] prefix#a; \
  matrix[rows(T), rows(T)] prefix#P; \
  vector[rows(T)] prefix#M; \
  real prefix#F; \
  prefix#a <- a1; \
  prefix#P <- P1; \
  for (i in 1:dims(y)[1]) { \
    for (j in 1:dims(y)[2]) { \
      {{#use_missing}} \
      if (! int_step(missing[i, j])) { \
      {{/use_missing}} \
        vector[m] prefix#Zj; \
        prefix#Zj <- Z[{{#tv_c}}i, {{/tv_c}}j]'; \
        prefix#v <- y[i, j] - c[{{#tv_c}}i, {{/tv_c}}j] - dot_product(prefix#Zj, prefix#a); \
        prefix#M <- prefix#P * prefix#Zj; \
        prefix#F <- dot_product(prefix#Zj, prefix#M) + H[{{#tv_H}}i, {{/tv_H}}j]; \
        prefix#Finv <- 1 / prefix#F; \
        prefix#K <- prefix#M * prefix#Finv; \
        prefix#a <- prefix#a + prefix#K * prefix#v; \
        prefix#P <- prefix#P - prefix#K * prefix#M'; \
        prefix#P <- 0.5 * (prefix#P + prefix#P');  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(prefix#F) + prefix#Finv * pow(prefix#v, 2.0)); \
      {{#use_missing}} \
      } \
      {{/use_missing}} \
    } \
    prefix#a <- d{{#tv_d}}[i]{{/tv_d}} + T{{#tv_T}}[i]{{/tv_T}} * prefix#a; \
    prefix#P <- T{{#tv_T}}[i]{{/tv_T}} * prefix#P * T{{#tv_T}}[i]{{/tv_T}}' + RQR{{#tv_RQR}}[i]{{/tv_RQR}}; \
    prefix#P <- 0.5 * (prefix#P + prefix#P'); \
  } \
} \

