#define TRANSPOSE '


#define KALMAN_SEQ_TZHQcdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZHQcd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZHQcM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZHQc(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZHQdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZHQd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZHQM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZHQ(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZHcdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZHcd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZHcM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZHc(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZHdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZHd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZHM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZH(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZQcdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZQcd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZQcM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZQc(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZQdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZQd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZQM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZQ(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZcdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZcd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZcM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZc(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TZ(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_THQcdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_THQcd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_THQcM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_THQc(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_THQdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_THQd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_THQM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_THQ(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_THcdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_THcd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_THcM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_THc(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_THdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_THd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_THM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TH(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TQcdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TQcd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TQcM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TQc(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TQdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TQd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TQM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TQ(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TcdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_Tcd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TcM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_Tc(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_Td(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_TM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_T(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T[i] * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T[i] * KALMAN_SEQ_P * T[i] TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZHQcdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZHQcd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZHQcM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZHQc(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZHQdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZHQd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZHQM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZHQ(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZHcdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZHcd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZHcM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZHc(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZHdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZHd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZHM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZH(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZQcdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZQcd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZQcM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZQc(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZQdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZQd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZQM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZQ(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZcdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_Zcd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZcM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_Zc(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_Zd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_ZM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_Z(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_HQcdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_HQcd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_HQcM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_HQc(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_HQdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_HQd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_HQM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_HQ(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_HcdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_Hcd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_HcM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_Hc(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_HdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_Hd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_HM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_H(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[i, j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_QcdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_Qcd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_QcM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_Qc(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_QdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_Qd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_QM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_Q(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR[i]; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_cdM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_cd(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_cM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_c(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[i, j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[i, j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_dM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ_d(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d[i] + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQM(y, T, Z, H, RQR, a1, P1, c, d, missing) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
      if (! int_step(missing[i, j])) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
      } \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


#define KALMAN_SEQ(y, T, Z, H, RQR, a1, P1, c, d) \
{ \
  real KALMAN_SEQ_v; \
  vector[rows(T)] KALMAN_SEQ_K; \
  real KALMAN_SEQ_Finv; \
  vector[rows(T)] KALMAN_SEQ_a; \
  matrix[rows(T), rows(T)] KALMAN_SEQ_P; \
  vector[rows(T)] KALMAN_SEQ_M; \
  real KALMAN_SEQ_F; \
  KALMAN_SEQ_a <- a1; \
  KALMAN_SEQ_P <- P1; \
  for (i in 1:cols(y)) { \
    for (j in 1:rows(y)) { \
       \
        vector[m] KALMAN_SEQ_Zj; \
        KALMAN_SEQ_Zj <- Z[j] TRANSPOSE; \
        KALMAN_SEQ_v <- y[j, i] - c[j] - dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_a); \
        KALMAN_SEQ_M <- KALMAN_SEQ_P * KALMAN_SEQ_Zj; \
        KALMAN_SEQ_F <- dot_product(KALMAN_SEQ_Zj, KALMAN_SEQ_M) + H[j]; \
        KALMAN_SEQ_Finv <- 1 / KALMAN_SEQ_F; \
        KALMAN_SEQ_K <- KALMAN_SEQ_M * KALMAN_SEQ_Finv; \
        KALMAN_SEQ_a <- KALMAN_SEQ_a + KALMAN_SEQ_K * KALMAN_SEQ_v; \
        KALMAN_SEQ_P <- KALMAN_SEQ_P - KALMAN_SEQ_K * KALMAN_SEQ_M TRANSPOSE; \
        KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE);  \
        lp__ <- lp__  - 0.5 * (log(2 * pi())  \
                               + log(KALMAN_SEQ_F) + KALMAN_SEQ_Finv * pow(KALMAN_SEQ_v, 2.0)); \
       \
    } \
    KALMAN_SEQ_a <- d + T * KALMAN_SEQ_a; \
    KALMAN_SEQ_P <- T * KALMAN_SEQ_P * T TRANSPOSE + RQR; \
    KALMAN_SEQ_P <- 0.5 * (KALMAN_SEQ_P + KALMAN_SEQ_P TRANSPOSE); \
  } \
} \


